generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Carrera {
  id          Int          @id @default(autoincrement())
  nombre      String
  descripcion String?
  materias    Materia[]
  estudiantes Estudiante[]
}

model Especialidad {
  id        Int        @id @default(autoincrement())
  nombre    String
  docentes  Docente[]
}

model Docente {
  id              Int          @id @default(autoincrement())
  nombre          String
  email           String       @unique
  especialidadId  Int
  especialidad    Especialidad @relation(fields: [especialidadId], references: [id])
  materias        Materia[]
  fechaCreacion   DateTime     @default(now())
}

model Ciclo {
  id            Int           @id @default(autoincrement())
  nombre        String
  descripcion   String?
  estudiantes   Estudiante[]
  materias      Materia[]
  inscripciones Inscripcion[]
}

model Materia {
  id            Int         @id @default(autoincrement())
  nombre        String
  creditos      Int
  carreraId     Int
  docenteId     Int?
  cicloId       Int?
  carrera       Carrera     @relation(fields: [carreraId], references: [id])
  docente       Docente?    @relation(fields: [docenteId], references: [id])
  ciclo         Ciclo?      @relation(fields: [cicloId], references: [id])
  inscripciones Inscripcion[]
  fechaCreacion DateTime    @default(now())
}

model Estudiante {
  id            Int          @id @default(autoincrement())
  nombre        String
  email         String       @unique
  carreraId     Int
  cicloId       Int?
  carrera       Carrera      @relation(fields: [carreraId], references: [id])
  ciclo         Ciclo?       @relation(fields: [cicloId], references: [id])
  inscripciones Inscripcion[]
  fechaCreacion DateTime     @default(now())
}

model Inscripcion {
  id            Int        @id @default(autoincrement())
  estudianteId  Int
  materiaId     Int
  cicloId       Int?       // Relaci√≥n opcional
  fechaRegistro DateTime   @default(now())

  estudiante Estudiante @relation(fields: [estudianteId], references: [id])
  materia    Materia    @relation(fields: [materiaId], references: [id])
  ciclo      Ciclo?     @relation(fields: [cicloId], references: [id])

  @@unique([estudianteId, materiaId])
}
